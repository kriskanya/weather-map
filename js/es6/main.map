{"version":3,"file":"main.js","sources":["/Users/kristiankanya/Documents/Code/weather-map/public/js/es6/main.es6.js"],"names":[],"mappings":"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","sourcesContent":["/* global google:true */\n/* jshint unused:false, camelcase:false */\n/* global AmCharts: true */\n/* global _:true */\n\n(function(){\n  'use strict';\n\n  $(document).ready(init);\n\n  function init(){\n    initMap(36, 36, 4);\n    $('#add').click(get);\n  }\n\n  function get(){\n    var location = $('#location').val();\n    showPosition(location);\n    makeChart();\n  }\n\n  var map;\n  function initMap(lat, lng, zoom){    //creates map\n    let mapOptions = {center: new google.maps.LatLng(lat, lng), zoom: zoom, mapTypeId: google.maps.MapTypeId.ROADMAP};    //SATELLITE or HYBRID can also be used\n    map = new google.maps.Map(document.getElementById('map'), mapOptions);\n  }\n\n  function showPosition(location){    //grabs your position\n    let geocoder = new google.maps.Geocoder();    //allows you to change something from a place into a lat. and long.\n\n    geocoder.geocode({address: location}, (results, status)=>{    //anonymous function => arrow function\n      let name = results[0].formatted_address;\n      let lat = results[0].geometry.location.lat();\n      let lng = results[0].geometry.location.lng();\n      addMarker(lat,lng,name);\n\n      let latLng = new google.maps.LatLng(lat, lng);\n      map.setCenter(latLng);    //centers the map on the lat. and long. that the user calls for\n      map.setZoom(15); //zoom down on something\n\n      addTenDayForecast(lat,lng);\n    });\n  }\n\n  function addMarker(lat,lng,name){\n    let latLng = new google.maps.LatLng(lat, lng);\n    new google.maps.Marker({map: map, position: latLng, title: name});    //tells the api which map to add the marker to\n  }\n\n  function addTenDayForecast(lat,lng){\n    var url = 'http://api.wunderground.com/api/e8dcaa06f5ec42ae/forecast10day/q/'+lat+','+lng+'.json?callback=?';\n    $.getJSON(url, callWeatherData);\n  }\n\n  function callWeatherData(data){\n    // let forecastDay = data.forecast.simpleforecast.forecastday;\n    // let highTemp = data.forecast.simpleforecast.forecastday.high.fahrenheit;\n    // let lowTemp = data.forecast.simpleforecast.forecastday.low.fahrenheit;\n    // let dayOfTheWeek = data.forecast.simpleforecast.forecastday.date.weekday;\n\n    // for(let i = 0; i < 10; i++){\n    //\n    //   chart.dataProvider.push({date: dayOfTheWeek(forecastDay[i]),\n    //                         lows: lowTemp(forecastDay[i]),\n    //                         highs: highTemp(forecastDay[i])\n    //                         });\n    // }\n    // console.log(dataProvider);\n\n    data.forecast.simpleforecast.forecastday.forEach(t=>chart.dataProvider.push({high:t.high.fahrenheit, low:t.low.fahrenheit, date:t.date.weekday_short}));\n    chart.validateData();\n\n // chartData.push({\n //            date: newDate,\n //            visits: visits,\n //            hits: hits,\n //            views: views\n //        });\n    // data.forecast.simpleforecast.forecastday.forEach(t=>chart.dataProvider.push({date:t.dayOfTheWeek(), lows:t.lowTemp(), highs:t.highTemp()}));\n    //title is the x axis, critics is y axis (1) and audience is y axis (2)\n    //{title:\"Rio 2\", audience:53, critics: 22}  <---example of an object you would push into the array\n      //need to use this so that your graph updates\n  }\n\n  function highTemp(input){\n    return input.high.fahrenheit;\n  }\n\n  function lowTemp(input){\n    return input.low.fahrenheit;\n  }\n\n  function dayOfTheWeek(input){\n    return input.date.weekday;\n  }\n\nvar chart;\nfunction makeChart(){\n    chart = AmCharts.makeChart('chartdiv', {\n        'type': 'serial',\n        'theme': 'none',\n        'pathToImages': 'http://www.amcharts.com/lib/3/images/',\n        'legend': {\n            'useGraphSettings': true\n        },\n        'dataProvider': [],\n        'valueAxes': [{\n            'id':'v1',\n            'minimum': 0,    //added to the properties; otherwise it would scale automataically\n            'maximum': 100,\n            'axisColor': '#FF6600',\n            'axisThickness': 2,\n            'gridAlpha': 0,\n            'axisAlpha': 1,\n            'position': 'left'\n        }],\n        'graphs': [{\n              'valueAxis': 'v1',    //y axis\n              'lineColor': '#FF6600',\n              'bullet': 'round',\n              'bulletBorderThickness': 1,\n              'hideBulletsCount': 30,\n              'title': 'high temp',\n              'valueField': 'high',\n      \t\t'fillAlphas': 0\n        }, {\n            'valueAxis': 'v1',    //y axis\n            'lineColor': '#FCD202',\n            'bullet': 'square',\n            'bulletBorderThickness': 1,\n            'hideBulletsCount': 30,\n            'title': 'low temp',\n            'valueField': 'low',\n    \t\t'fillAlphas': 0\n        }],\n        'chartScrollbar': {},\n        'chartCursor': {\n            'cursorPosition': 'mouse'\n        },\n        'categoryField': 'date',    //this is the x axis\n        'categoryAxis': {\n            'axisColor': '#DADADA',\n            'minorGridEnabled': true\n        }\n    });\n}\n\n})();\n\n\n\n\n// function getWeather(zip){\n//   let url = weather underground url\n//   $.getJSON(url, data=>\n//     $('#graphs').append(`<div class = graph data-zip=${zip}></div>`);\n//     initGraph(zip);\n//   )\n// }\n//\n// function initGraph(zip){\n//   let graph = $(`graph[data-zip=${zip}]`[0]);\n//   charts[zip]= AmCharts...\n// }\n"]}